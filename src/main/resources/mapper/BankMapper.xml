<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bank.manager.dao.bankDao">
    <resultMap id="BaseResultMap" type="com.bank.manager.domain.sys.Bank">
        <result column="id" property="id"/>
        <result column="bank_name" property="bankName"/>
        <result column="level" property="level"/>
        <result column="address" property="address"/>
        <result column="start_ip" property="startIp"/>
        <result column="end_ip" property="endIp"/>
        <result column="lng" property="lng"/>
        <result column="lat" property="lat"/>
        <result column="c_time" property="createTime"/>
        <result column="c_uid" property="createUid"/>
        <result column="e_time" property="editTime"/>
        <result column="e_uid" property="editUid"/>
    </resultMap>

    <sql id="Base_Column_List">
		id, `bank_name`,address,start_ip,end_ip,lng,lat,c_time,c_uid,e_time,e_uid
	</sql>
    <insert id="saveBank" useGeneratedKeys="true" keyProperty="id">
        insert into t_banks (`bank_name`,address,start_ip,end_ip,lng,lat,c_time,c_uid)
        values(#{bankName},#{address},#{startIp},#{endIp},#{lng},#{lat},#{createTime},#{createUid})
    </insert>


    <update id="updateBank">
        update t_banks set
        <if test="bankName!=null">
            bank_name = #{bankName},
        </if>
        <if test="address!=null">
            address = #{address},
        </if>
        <if test="startIp!=null">
            start_ip = #{startIp},
        </if>
        <if test="endIp!=null">
            end_ip = #{endIp},
        </if>
        <if test="lng!=null">
            lng = #{lng},
        </if>
        <if test="lat!=null">
            lat = #{lat},
        </if>
        <if test="editUid!=0">
            `e_uid` = #{editUid},
        </if>
        <if test="editTime!=null">
            e_time = #{editTime}
        </if>
        where
        id = #{id}
    </update>


    <select id="getBankList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_banks
    </select>
    <delete id="deleteBank" parameterType="java.util.List">
        delete from t_banks
        where id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <select id="checkRepeat" resultType="INTEGER" parameterType="Device">
        select count(id) from t_banks
        where bank_name=#{bankName}
        and start_ip = #{startIp}
        and end_ip = #{endIp}
        and id !=#{id}
    </select>



</mapper>